name: "godot-ci export"
on: push

# NOTE: If your `project.godot` is at the repository root, set `PROJECT_PATH` below to ".".

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: godot-ci-demo
  PROJECT_PATH: ./

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME-windows-x86_64.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: build/windows/*
          draft: false
          prerelease: false
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: New Release.

  export-linux:
    name: Linux Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux/X11" "$EXPORT_DIR/linux/$EXPORT_NAME-linux-x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: build/linux/*
          draft: false
          prerelease: false
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: New Release.

  export-android-debug:
    name: Android Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'  # ÊÇ®ÂèØ‰ª•Ê†πÊçÆÈúÄË¶Å‰øÆÊîπJavaÁâàÊú¨
          distribution: 'oracle'  # ÊÇ®ÂèØ‰ª•ÈÄâÊã©‰∏çÂêåÁöÑÂàÜÂèëÁâàÊú¨
      - name: Setup Godot Template
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Android Build
        run: |
          mkdir -v -p build/android
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-debug "Android" "$EXPORT_DIR/android/$EXPORT_NAME-android.apk" --java-sdk-path $JAVA_HOME
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: build/android
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: build/android/*
          draft: false
          prerelease: false
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: New Release.     

  create_tag_and_release:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Set up Git
          run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
        - name: Create Tag
          id: create_tag
          run: |
            TAG_NAME="${{ github.ref_name }} + v$(date +'%Y%m%d%H%M%S')"
            git tag $TAG_NAME
            git push origin $TAG_NAME
            echo "::set-output name=TAG_NAME::$TAG_NAME"
        - name: Create Release
          uses: actions/create-release@v2
          with:
            tag_name: ${{ steps.create_tag.outputs.TAG_NAME }}
            release_name: ${{ steps.create_tag.outputs.TAG_NAME }}
            body: "Automatic release based on push to main branch"
            draft: false
            prerelease: 
  # export-android:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Setup Godot
  #       uses: barichello/godot-ci:4.3
  #     - name: Export Android APK
  #       run: |
  #         godot --path . --export-debug "Android" android/build/$EXPORT_NAME.apk
  #     - name: Upload APK
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: android-apk
  #         path: android/build/$EXPORT_NAME.apk


  # export-web:
  #   name: Web Export
  #   runs-on: ubuntu-20.04
  #   container:
  #     image: barichello/godot-ci:4.3
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/export_templates/
  #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
  #     - name: Web Build
  #       run: |
  #         mkdir -v -p build/web
  #         EXPORT_DIR="$(readlink -f build)"
  #         cd $PROJECT_PATH
  #         godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: web
  #         path: build/web
  #     - name: Install rsync üìö
  #       run: |
  #         apt-get update && apt-get install -y rsync
  #     - name: Deploy to GitHub Pages üöÄ
  #       uses: JamesIves/github-pages-deploy-action@releases/v4
  #       with:
  #         branch: gh-pages # The branch the action should deploy to.
  #         folder: build/web # The folder the action should deploy.

  # export-mac:
  #   name: Mac Export
  #   runs-on: ubuntu-20.04
  #   container:
  #     image: barichello/godot-ci:4.3
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/export_templates/
  #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
  #     - name: Mac Build
  #       run: |
  #         mkdir -v -p build/mac
  #         EXPORT_DIR="$(readlink -f build)"
  #         cd $PROJECT_PATH
  #         godot --headless --verbose --export-release "macOS" "$EXPORT_DIR/mac/$EXPORT_NAME.zip"
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: mac
  #         path: build/mac
